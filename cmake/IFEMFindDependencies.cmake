# Locate the IFEM dependencies

find_package(CBLAS REQUIRED)
find_package(LAPACK REQUIRED)

find_package(GoTools REQUIRED)
add_library(GoTools::GoTools INTERFACE IMPORTED)
set(GoTools_LIBRARY_DIRS ${GoTools_LIBRARIES})
list(FILTER GoTools_LIBRARY_DIRS INCLUDE REGEX -L.*)
list(TRANSFORM GoTools_LIBRARY_DIRS REPLACE "-L" "")
list(FILTER GoTools_LIBRARIES EXCLUDE REGEX -L.*)
target_link_libraries(GoTools::GoTools INTERFACE ${GoTools_LIBRARIES})
target_include_directories(GoTools::GoTools INTERFACE ${GoTools_INCLUDE_DIRS})
target_compile_definitions(GoTools::GoTools INTERFACE ${GoTools_CXX_FLAGS})
target_link_directories(GoTools::GoTools INTERFACE ${GoTools_LIBRARY_DIRS})

find_package(GoTrivariate REQUIRED)
add_library(GoTools::GoTrivariate INTERFACE IMPORTED)
set(GoTrivariate_LIBRARY_DIRS ${GoTrivariate_LIBRARIES})
list(FILTER GoTrivariate_LIBRARY_DIRS INCLUDE REGEX -L.*)
list(TRANSFORM GoTrivariate_LIBRARY_DIRS REPLACE "-L" "")
list(FILTER GoTrivariate_LIBRARIES EXCLUDE REGEX -L.*)
target_include_directories(GoTools::GoTrivariate INTERFACE ${GoTrivariate_INCLUDE_DIRS})
target_link_libraries(GoTools::GoTrivariate INTERFACE ${GoTrivariate_LIBRARIES} GoTools::GoTools)
target_link_directories(GoTools::GoTrivariate INTERFACE ${GoTrivariate_LIBRARY_DIRS})

find_package(ARPACK REQUIRED)
find_package(TinyXML2 REQUIRED)

if(IFEM_USE_SUPERLU OR IFEM_USE_SUPERLU_MT)
  find_package(SuperLU)
endif()

if(IFEM_USE_LRSPLINES)
  find_package(LRSpline)
  if(LRSpline_FOUND)
    add_library(LRSpline::LRSpline INTERFACE IMPORTED)
    set(LRSpline_LIBRARY_DIRS ${LRSpline_LIBRARIES})
    list(FILTER LRSpline_LIBRARY_DIRS INCLUDE REGEX -L.*)
    list(TRANSFORM LRSpline_LIBRARY_DIRS REPLACE "-L" "")
    list(FILTER LRSpline_LIBRARIES EXCLUDE REGEX -L.*)
    target_link_libraries(LRSpline::LRSpline INTERFACE ${LRSpline_LIBRARIES})
    target_include_directories(LRSpline::LRSpline INTERFACE ${LRSpline_INCLUDE_DIRS})
    target_compile_definitions(LRSpline::LRSpline INTERFACE ${LRSpline_DEFINITIONS} HAS_LRSPLINE=1)
    target_link_directories(LRSpline::LRSpline INTERFACE ${LRSpline_LIBRARY_DIRS})
  endif()
endif()

if(IFEM_USE_MPI)
  find_package(MPI REQUIRED)
endif()

if(IFEM_USE_PETSC)
  find_package(PETSc)
endif()

if(IFEM_USE_SLEPC AND TARGET PETSc::PETSc)
  find_package(SLEPc)
endif()

if(IFEM_USE_HDF5)
  if(MPI_FOUND)
    set(HDF5_PREFER_PARALLEL 1)
  endif()
  find_package(HDF5 COMPONENTS C)
endif()

if(NOT IFEM_USE_SPR MATCHES "OFF")
  if(IFEM_USE_SPR MATCHES "I64")
    set(SPR_USE_INT8 TRUE)
  else()
    set(SPR_USE_INT4 TRUE)
  endif()
  find_package(SPR)
endif()

if(IFEM_USE_SAMG)
  find_package(SAMG)
endif()

if(IFEM_USE_VTFWRITER)
  find_package(VTFWriter)
endif()

if(IFEM_USE_OPENMP)
  find_package(OpenMP)
endif()

if(IFEM_USE_UMFPACK)
  find_package(SuiteSparse COMPONENTS umfpack)
endif()

if(IFEM_USE_ISTL)
  find_package(ISTL)
endif()

if(IFEM_USE_CEREAL)
  find_path(CEREAL_INCLUDE_DIRS NAMES cereal/cereal.hpp)
  if(CEREAL_INCLUDE_DIRS)
    add_library(cereal::cereal IMPORTED INTERFACE)
    target_include_directories(cereal::cereal INTERFACE ${CEREAL_INCLUDE_DIRS})
  endif()
endif()

if(IFEM_USE_ZOLTAN)
  find_package(Zoltan)
endif()

if(IFEM_USE_TRACY)
  find_package(Tracy)
endif()

# Export some variables used for tests enablement
get_directory_property(hasParent PARENT_DIRECTORY)
if(hasParent)
  foreach(VAR ARPACK cereal HDF5 ISTL LRSpline MPI PETSc SLEPc SPR VTFWriter Zoltan)
    set(${VAR}_FOUND ${${VAR}_FOUND} PARENT_SCOPE)
  endforeach()
endif()
